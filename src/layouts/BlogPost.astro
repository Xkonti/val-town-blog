---
import type { CollectionEntry } from 'astro:content';
import { Image } from "astro:assets";
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, author, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
      .prose :global(.expressive-code .frame) {
        box-shadow: none;
      }
      .prose :global(p) {
        margin: 20px 0;
      }
      .prose :global(p code) {
        font-size: 80%;
        background: #F0F6FF;
        border-radius: 4px;
        color: #1e3a8a;
        font-family: var(--ec-codeFontFml);
      }
      .prose :global(p:has(img)) {
        margin: 0;
      }
      .prose :global(a) {
        text-decoration: none;
        color: #2563EB;
      }
      .prose :global(a:hover) {
        text-decoration: underline;
      }
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
      /** This might be too aggressive - would
      * prefer it not be global.
      */
      .prose :global(video) {
        width: 100%;
      }
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}

	    @media (max-width: 720px) {
        .title h1 {
          font-size: 30px;
        }
      }
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article itemscope itemtype="https://schema.org/Article">
				<div class="hero-image">
					{heroImage && <Image width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
              {author ?
                <>by <span itemprop="author">{author}</span></>  : null}
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1 itemprop="name">{title}</h1>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
